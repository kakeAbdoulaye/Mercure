<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Mercure</name>
    </assembly>
    <members>
        <member name="T:Mercure.Models.Article">
            <summary>
            Cette classe permet de modéliser et représenter un article 
            </summary>
            <remarks>
                Chaque attributs représente un champ dans la table Articles dans la base de données
                Elle est caractérisé par :  
                    - un identifiant unique de l'article
                    - une description de l'article 
                    - La sous famille de l'article
                    - La marque de l'article 
                    - le prix de l'article 
                    - la quantité disponible de cet article 
                    
            </remarks>
            <see cref="P:Mercure.Models.Article.SousFamille"/>
            <see cref="P:Mercure.Models.Article.Marque"/>
        </member>
        <member name="F:Mercure.Models.Article.RefArticle_">
            <summary>
             l'identifiant de l'article , type : chaine de caractère 
            </summary>
            <see cref="T:System.String"/>
        </member>
        <member name="F:Mercure.Models.Article.Description_">
            <summary>
            la description de l'article ,  type : chaine de caractère 
            </summary>
            <see cref="T:System.String"/>
        </member>
        <member name="F:Mercure.Models.Article.SousFamille_">
            <summary>
             La sous famille de l'article , type : SousFamille 
            </summary>
            <see cref="P:Mercure.Models.Article.SousFamille"/>
        </member>
        <member name="F:Mercure.Models.Article.Marque_">
            <summary>
            La marque de l'article 
            </summary>
            <see cref="P:Mercure.Models.Article.Marque"/>
        </member>
        <member name="F:Mercure.Models.Article.PrixHT_">
            <summary>
             le prix de l'article 
            </summary>
            <see cref="T:System.Double"/>
        </member>
        <member name="F:Mercure.Models.Article.Quantite_">
            <summary>
             La quantité d'un article 
            </summary>
            <see cref="T:System.Int32"/>
        </member>
        <member name="M:Mercure.Models.Article.#ctor(System.String,System.String,Mercure.Models.SousFamille,Mercure.Models.Marque,System.Double,System.Int32)">
            <summary>
             Constructeur d'un objet Article
            </summary>
            <param name="refarticle"> identifiant de l'article </param>
            <param name="description">la description de l'article </param>
            <param name="sousfamille">la sous famille de l'article </param>
            <param name="marque">la marque de l'article </param>
            <param name="prix"> le prix de l'article </param>
            <param name="quantite">la quantité  de l'article </param>
        </member>
        <member name="P:Mercure.Models.Article.RefArticle">
            <summary>
                Cette propriété correspond à celui de l'identifiant de l'article
                qui lui permet de modifier l'identifiant , et retourner le l'identifiant 
            </summary>
        </member>
        <member name="P:Mercure.Models.Article.Description">
            <summary>
                Cette propriété correspond à celui de la description de l'article 
                qui lui permet de modifier la description , et retourner la description
            </summary>
        </member>
        <member name="P:Mercure.Models.Article.SousFamille">
            <summary>
                Cette propriété correspond à celui de la sous famille de l'article 
                qui lui permet de modifier la sous famille , et retourner la sous famille
            </summary>
        </member>
        <member name="P:Mercure.Models.Article.Marque">
            <summary>
                Cette propriété correspond à celui de la marque de l'article 
                qui lui permet de modifier la marque , et retourner la marque
            </summary>
        </member>
        <member name="P:Mercure.Models.Article.PrixHT">
            <summary>
                Cette propriété correspond à celui du prix de l'artcile 
                qui lui permet de modifier le prix , et retourner le prix
            </summary>
        </member>
        <member name="P:Mercure.Models.Article.Quantite">
            <summary>
                Cette propriété correspond à celui de la quantite de l'article 
                qui lui permet de modifier la quantite , et retourner la quantite
            </summary>
        </member>
        <member name="T:Mercure.Models.Famille">
            <summary>
                Famille est la classe représentant une famille d'article dans la base de données
            </summary>
            <remarks>
                Une famille est caractérisé par : 
                 - un identifiant unique 
                 - un nom de famille 
            </remarks>
        </member>
        <member name="F:Mercure.Models.Famille.RefFamille_">
            <summary>
             l'identifiant d'une famille , type entier 
            </summary>
            <see cref="T:System.Int32"/>
        </member>
        <member name="F:Mercure.Models.Famille.NomFamille_">
            <summary>
            le nom de la famille , type chaine de caractère 
            </summary>
            <see cref="T:System.String"/>
        </member>
        <member name="M:Mercure.Models.Famille.#ctor(System.Int32,System.String)">
            <summary>
                Contructeur d'un objet Famille, qui permet d'instancier les attributs de la classe 
            </summary>
            <param name="reffamille"> l'identifiant unique d'une famille </param>
            <param name="famille">le nom d'une famille </param>
        </member>
        <member name="P:Mercure.Models.Famille.RefFamille">
            <summary>
             Cette propriété correspond à celui de l'identifiant de la famille 
             qui permet de retourner l'identifiant et de le modifier 
            </summary>
        </member>
        <member name="P:Mercure.Models.Famille.NomFamille">
            <summary>
             Cette propriété correspond à celui du nom de la famille 
             permettant sa modification et retour du nom 
            </summary>
        </member>
        <member name="T:Mercure.Models.Marque">
            <summary>
                Cette classe représente une marque d'article  dans la base de données
                
            </summary>
            <remarks>
                Une marque est caractérisé par : 
                 - un identifiant unique , attribué à une marque 
                 - un nom de marque 
            </remarks>
        </member>
        <member name="F:Mercure.Models.Marque.RefMarque_">
            <summary>
             L'identifiant de la marque , type : entier 
            </summary>
            <see cref="T:System.Int32"/> 
        </member>
        <member name="F:Mercure.Models.Marque.NomMarque_">
            <summary>
            Le nom de la marque , type : chaine de caractère 
            </summary>
            <see cref="T:System.String"/>
        </member>
        <member name="M:Mercure.Models.Marque.#ctor(System.Int32,System.String)">
            <summary>
                Constructeur d'un objet Marque  , qui initialise les attributs de la classe
            </summary>
            <param name="refmarque"> l'identifiant unique de la marque </param>
            <param name="marque">le nom de la marque </param>
        </member>
        <member name="P:Mercure.Models.Marque.NomMarque">
            <summary>
                Cette propriété correspond à celui du nom de la marque 
                qui lui permet de modifier le nom , et retourner le nom 
            </summary>
        </member>
        <member name="P:Mercure.Models.Marque.RefMarque">
            <summary>
                Cette propriété correspond à celui de l'identifiant de la marque 
                qui lui permet de modifier l'identifiant , et retourner le l'identifiant 
            </summary>
        </member>
        <member name="T:Mercure.Models.SousFamille">
            <summary>
             SousFamille , cette classe représente une sous famille d'un article dans la base de données
            </summary>
            <remarks>
                Une sous famille est caractérisé par : 
                    - un identifiant unique d'une sous famille 
                    - une famille à la quelle elle appartient 
                    - le nom de la sous famille 
                    
            <see cref="T:Mercure.Models.Famille"/>
            </remarks>
        </member>
        <member name="F:Mercure.Models.SousFamille.RefSousFamille_">
            <summary>
             L'identifiant de la sous famille , type : entier 
            </summary>
            <see cref="T:System.Int32"/>
        </member>
        <member name="F:Mercure.Models.SousFamille.MaFamille_">
            <summary>
             La famille à la quelle appartient la sous famille , type : Famille
            </summary>
            <see cref="T:Mercure.Models.Famille"/>
        </member>
        <member name="F:Mercure.Models.SousFamille.NomSousFamille_">
            <summary>
             Le nom de la sous famille , type : chaine de caractere 
            </summary>
            <see cref="T:System.String"/>
        </member>
        <member name="M:Mercure.Models.SousFamille.#ctor(System.Int32,Mercure.Models.Famille,System.String)">
            <summary>
                Constructeur  d'un objet  sous famille 
            </summary>
            <param name="refsousfamille"> l'identifiant de la sous famille </param>
            <param name="famille">la famille appartenante </param>
            <param name="nomsousfamille"> le nom de la sous famille </param>
        </member>
        <member name="P:Mercure.Models.SousFamille.RefSousFamille">
            <summary>
                Cette propriété correspond à l'identifiant de la sous famille 
                qui  permet de modifier et retourner  l'identifiant 
            </summary>
        </member>
        <member name="P:Mercure.Models.SousFamille.MaFamille">
            <summary>
                Cette propriété correspond à la famille à la quelle appartient la sous famille 
                qui  permet de modifier et retourner  la famille 
            </summary>
        </member>
        <member name="P:Mercure.Models.SousFamille.NomSousFamille">
            <summary>
                Cette propriété correspond au nom de la sous famille 
                qui  permet de modifier et retourner  le nom  
            </summary>
        </member>
        <member name="T:Mercure.Vue.Ajouter_Modifier_Article">
            <summary>
             Cette classe permet l'ajout et la modification d'un article à travers une interface graphique contenant les champs à remplir  
            </summary>
        </member>
        <member name="F:Mercure.Vue.Ajouter_Modifier_Article.RefArticle">
            <summary>
             Attribut contenant la reférence de l'article à modifier , il est null si c'est pour l'ajout 
            </summary>
        </member>
        <member name="F:Mercure.Vue.Ajouter_Modifier_Article.Reussi_">
            <summary>
             Attribut permettant de savoir s'il y a eu ajout ou modification , par défaut false 
            </summary>
        </member>
        <member name="P:Mercure.Vue.Ajouter_Modifier_Article.Reussi">
            <summary>
             Cette propriété permet d'avoir l'etat de l'opération l'ajout / modification 
            </summary>
        </member>
        <member name="M:Mercure.Vue.Ajouter_Modifier_Article.#ctor(System.String,System.String)">
            <summary>
                Constructeur pour un objet de type Ajouter_Modifier_Article
            </summary>
            <param name="titre">le titre de la fenetre </param>
            <param name="refArticle"> la reférence de l'article , valeur par défaut = null</param>
            <remarks>
                - Si la reférence est à null , alors il s'agit de l'ajout d'un nouveau article 
                - Sinon il s'agit d'une modification
            </remarks>
        </member>
        <member name="M:Mercure.Vue.Ajouter_Modifier_Article.Init">
            <summary>
             Cette méthode permet d'initialiser l'interface graphique 
            </summary>
        </member>
        <member name="M:Mercure.Vue.Ajouter_Modifier_Article.RemplirComboSousfamille">
            <summary>
             Cette methode permet d'aller chercher dans la base de données Toutes les sous familles et remplir la liste Combobox pour les sous familles
            </summary>
        </member>
        <member name="M:Mercure.Vue.Ajouter_Modifier_Article.RemplirComboMarque">
            <summary>
             Cette methode permet d'aller chercher dans la base de données Toutes les marques et remplir la liste Combobox pour les marques
            </summary>
        </member>
        <member name="M:Mercure.Vue.Ajouter_Modifier_Article.Button_Annuler_Click(System.Object,System.EventArgs)">
            <summary>
             Cette methode permet de fermer la fenetre après avoir cliquer sur le bouton annuler 
            </summary>
            <param name="sender">object qui envoie l'action </param>
            <param name="e">Evenement envoyé </param>
        </member>
        <member name="M:Mercure.Vue.Ajouter_Modifier_Article.Button_Ajouter_Modifier_Click(System.Object,System.EventArgs)">
            <summary>
             Cette methode permet d'ajout ou de modifier un article après avoir cliqué sur le bouton ajouter / modifier
            </summary>
            <param name="sender">object qui envoie l'action </param>
            <param name="e">Evenement envoyé </param>
            <remarks>
                Cette methode vérifie que tous les champs sont saisie par l'utilisateur 
                et choisie en fonction de l'attribut <see cref="F:Mercure.Vue.Ajouter_Modifier_Article.RefArticle"/> si on ajoute ou modifie l'article 
                puis on ferme la fenetre
            </remarks>
        </member>
        <member name="F:Mercure.Vue.Ajouter_Modifier_Article.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Mercure.Vue.Ajouter_Modifier_Article.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Mercure.Vue.Ajouter_Modifier_Article.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:Mercure.Vue.Ajouter_Modifier_Famille">
            <summary>
             Cette classe permet l'ajout et la modification d'une famille à travers une interface graphique contenant les champs à remplir  
            </summary>
        </member>
        <member name="F:Mercure.Vue.Ajouter_Modifier_Famille.RefFamille">
            <summary>
             Attribut contenant la reférence de la famille à modifier , il est égale à -1  si c'est pour l'ajout 
            </summary>
        </member>
        <member name="F:Mercure.Vue.Ajouter_Modifier_Famille.Reussi_">
            <summary>
             Attribut permettant de savoir s'il y a eu ajout ou modification , par défaut false 
            </summary>
        </member>
        <member name="P:Mercure.Vue.Ajouter_Modifier_Famille.Reussi">
            <summary>
             Cette propriété permet d'avoir l'etat de l'opération l'ajout / modification 
            </summary>
        </member>
        <member name="M:Mercure.Vue.Ajouter_Modifier_Famille.#ctor(System.String,System.Int32)">
            <summary>
                Constructeur pour un objet de type Ajouter_Modifier_Famille
            </summary>
            <param name="titre">le titre de la fenetre </param>
            <param name="refFamille"> la reférence de la famille , valeur par défaut = -1</param>
            <remarks>
                - Si la reférence est à -1 , alors il s'agit de l'ajout d'une nouvelle famille 
                - Sinon il s'agit d'une modification
            </remarks>
        </member>
        <member name="M:Mercure.Vue.Ajouter_Modifier_Famille.Init">
            <summary>
             Cette méthode permet d'initialiser l'interface graphique 
             
            </summary>
        </member>
        <member name="M:Mercure.Vue.Ajouter_Modifier_Famille.Button_Ajouter_Modifier_Click(System.Object,System.EventArgs)">
            <summary>
             Cette methode permet d'ajout ou de modifier une famille après avoir cliqué sur le bouton ajouter / modifier
            </summary>
            <param name="sender">object qui envoie l'action </param>
            <param name="e">Evenement envoyé </param>
            <remarks>
                Cette methode vérifie que tous les champs sont saisie par l'utilisateur 
                et choisie en fonction de l'attribut <see cref="F:Mercure.Vue.Ajouter_Modifier_Famille.RefFamille"/> si on ajoute ou modifie la famille 
                puis on ferme la fenetre
            </remarks>
        </member>
        <member name="M:Mercure.Vue.Ajouter_Modifier_Famille.Button_Annuler_Click(System.Object,System.EventArgs)">
            <summary>
             Cette methode permet de fermer la fenetre àprès avoir cliquer sur le bouton annuler 
            </summary>
            <param name="sender">object qui envoie l'action </param>
            <param name="e">Evenement envoyé </param>
        </member>
        <member name="F:Mercure.Vue.Ajouter_Modifier_Famille.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Mercure.Vue.Ajouter_Modifier_Famille.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Mercure.Vue.Ajouter_Modifier_Famille.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:Mercure.Vue.Ajouter_Modifier_Marque">
            <summary>
             Cette classe permet l'ajout et la modification d'une marque à travers une interface graphique contenant les champs à remplir  
            </summary>
        </member>
        <member name="F:Mercure.Vue.Ajouter_Modifier_Marque.RefMarque">
            <summary>
             Attribut contenant la reférence de la marque à modifier , il est egale à -1 si c'est pour l'ajout 
            </summary>
        </member>
        <member name="F:Mercure.Vue.Ajouter_Modifier_Marque.Reussi_">
            <summary>
             Attribut permettant de savoir s'il y a eu ajout ou modification , par défaut false 
            </summary>
        </member>
        <member name="P:Mercure.Vue.Ajouter_Modifier_Marque.Reussi">
            <summary>
             Cette propriété permet d'avoir l'etat de l'opération l'ajout / modification 
            </summary>
        </member>
        <member name="M:Mercure.Vue.Ajouter_Modifier_Marque.#ctor(System.String,System.Int32)">
            <summary>
                Constructeur pour un objet de type Ajouter_Modifier_Marque
            </summary>
            <param name="titre">le titre de la fenetre </param>
            <param name="refMarque"> la reférence de la marque , valeur par défaut = -1</param>
            <remarks>
                - Si la reférence est égale à -1  , alors il s'agit de l'ajout d'une nouvelle marque 
                - Sinon il s'agit d'une modification
            </remarks>
        </member>
        <member name="M:Mercure.Vue.Ajouter_Modifier_Marque.Init">
            <summary>
             Cette méthode permet d'initialiser l'interface graphique 
            </summary>
        </member>
        <member name="M:Mercure.Vue.Ajouter_Modifier_Marque.Button_Ajouter_Modifier_Click(System.Object,System.EventArgs)">
            <summary>
             Cette methode permet d'ajout ou de modifier une marqque après avoir cliqué sur le bouton ajouter / modifier
            </summary>
            <param name="sender">object qui envoie l'action </param>
            <param name="e">Evenement envoyé </param>
            <remarks>
                Cette methode vérifie que tous les champs sont saisie par l'utilisateur 
                et choisie en fonction de l'attribut <see cref="F:Mercure.Vue.Ajouter_Modifier_Marque.RefMarque"/> si on ajoute ou modifie la marque  
                puis on ferme la fenetre
            </remarks>
        </member>
        <member name="M:Mercure.Vue.Ajouter_Modifier_Marque.Button_Annuler_Click(System.Object,System.EventArgs)">
            <summary>
             Cette methode permet de fermer la fenetre après avoir cliquer sur le bouton annuler 
            </summary>
            <param name="sender">object qui envoie l'action </param>
            <param name="e">Evenement envoyé </param>
        </member>
        <member name="F:Mercure.Vue.Ajouter_Modifier_Marque.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Mercure.Vue.Ajouter_Modifier_Marque.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Mercure.Vue.Ajouter_Modifier_Marque.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:Mercure.Vue.Ajouter_Modifier_SousFamille">
            <summary>
             Cette classe permet l'ajout et la modification d'une sous famille à travers une interface graphique contenant les champs à remplir  
            </summary>
        </member>
        <member name="F:Mercure.Vue.Ajouter_Modifier_SousFamille.RefSousFamile">
            <summary>
             Attribut contenant la reférence de la sous famille à modifier , il est égale à -1 si c'est pour l'ajout 
            </summary>
        </member>
        <member name="F:Mercure.Vue.Ajouter_Modifier_SousFamille.Reussi_">
            <summary>
             Attribut permettant de savoir s'il y a eu ajout ou modification , par défaut false 
            </summary>
        </member>
        <member name="P:Mercure.Vue.Ajouter_Modifier_SousFamille.Reussi">
            <summary>
             Cette propriété permet d'avoir l'etat de l'opération l'ajout / modification 
            </summary>
        </member>
        <member name="M:Mercure.Vue.Ajouter_Modifier_SousFamille.#ctor(System.String,System.Int32)">
            <summary>
                Constructeur pour un objet de type Ajouter_Modifier_SousFamille
            </summary>
            <param name="titre">le titre de la fenetre </param>
            <param name="refsousFamille"> la reférence de la sous famille , valeur par défaut = -1</param>
            <remarks>
                - Si la reférence est à -1 , alors il s'agit de l'ajout d'une nouvelle sous famille 
                - Sinon il s'agit d'une modification
            </remarks>
        </member>
        <member name="M:Mercure.Vue.Ajouter_Modifier_SousFamille.RemplirComboFamille">
            <summary>
             Cette methode permet d'aller chercher dans la base de données Toutes les familles et remplir la liste Combobox pour les familles
            </summary>
        </member>
        <member name="M:Mercure.Vue.Ajouter_Modifier_SousFamille.Init">
            <summary>
             Cette méthode permet d'initialiser l'interface graphique 
            </summary>
        </member>
        <member name="M:Mercure.Vue.Ajouter_Modifier_SousFamille.Button_Ajouter_Modifier_Click(System.Object,System.EventArgs)">
            <summary>
             Cette methode permet d'ajout ou de modifier une sous famille après avoir cliqué sur le bouton ajouter / modifier
            </summary>
            <param name="sender">object qui envoie l'action </param>
            <param name="e">Evenement envoyé </param>
            <remarks>
                Cette methode vérifie que tous les champs sont saisie par l'utilisateur 
                et choisie en fonction de l'attribut <see cref="F:Mercure.Vue.Ajouter_Modifier_SousFamille.RefSousFamile"/> si on ajoute ou modifie la sous famille 
                puis on ferme la fenetre
            </remarks>
        </member>
        <member name="M:Mercure.Vue.Ajouter_Modifier_SousFamille.Button_Annuler_Click(System.Object,System.EventArgs)">
            <summary>
             Cette methode permet de fermer la fenetre après avoir cliquer sur le bouton annuler 
            </summary>
            <param name="sender">object qui envoie l'action </param>
            <param name="e">Evenement envoyé </param>
        </member>
        <member name="F:Mercure.Vue.Ajouter_Modifier_SousFamille.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Mercure.Vue.Ajouter_Modifier_SousFamille.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Mercure.Vue.Ajouter_Modifier_SousFamille.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:Mercure.Vue.ApplicatioCentrale">
            <summary>
             Cette classe represente l'application Centrale du projet , elle permet la gestion des articles 
             , des menus pour: 
             - L'intégration du fichier XML dans la base de données 
             - L'affichage : 
                - Des marques
                - Des sous familles
                - Des familles
             - L'Ajout :
                - Article
                - Marque
                - Sous Famille
                - Famille
             - Quitter l'application
             - Un status pour afficher la dernière action 
            </summary>
        </member>
        <member name="F:Mercure.Vue.ApplicatioCentrale.ColumnTri">
            <summary>
             Attribut permettant le tri sur une colonne 
            </summary>
        </member>
        <member name="F:Mercure.Vue.ApplicatioCentrale.GroupTri">
            <summary>
            Attribut des gestions des groupes sur les colonnes 
            </summary>
        </member>
        <member name="M:Mercure.Vue.ApplicatioCentrale.#ctor">
            <summary>
            Constructeur d'un objet de type ApplicatioCentrale
            </summary>
        </member>
        <member name="M:Mercure.Vue.ApplicatioCentrale.MettreJourArticles">
            <summary>
            Cette methode permet de mettre à jour la liste view contenant les articles  
            </summary>
            <remarks>
             On libère la liste view puis la remplie avec des nouveaux articles 
            </remarks>
        </member>
        <member name="M:Mercure.Vue.ApplicatioCentrale.RemplirListeArticle">
            <summary>
             Cette methode permet d'aller chercher dans la base de données Tous les articles et remplir la liste View de ces articles
             , en indiquant les noms de colonne 
            </summary>
        </member>
        <member name="M:Mercure.Vue.ApplicatioCentrale.ApplicatioCentrale_FormClosing(System.Object,System.Windows.Forms.FormClosingEventArgs)">
            <summary>
             Cette methode de se déconnecter à la base de données lors de la fermeture de l'application 
            </summary>
            <param name="sender">object qui envoie l'action </param>
            <param name="e">Evenement envoyé </param>
        </member>
        <member name="M:Mercure.Vue.ApplicatioCentrale.ChangementStatus(System.String)">
            <summary>
             Cette methode permet de changer le label status de l'application lors d'une opération
            </summary>
            <param name="chaine"> l'action faite sur l'application </param>
        </member>
        <member name="M:Mercure.Vue.ApplicatioCentrale.AjouterArticle">
            <summary>
             Cette méthode permet d'ouvir une fenetre modale d'ajout d'un article <see cref="T:Mercure.Vue.Ajouter_Modifier_Article"/>
            </summary>
            <remarks>
                Après la fermeture de cette fenetre modale , on met à jour la liste view des articles <see cref="F:Mercure.Vue.ApplicatioCentrale.ListView_Articles"/>  et 
                on change  le status de l'application si l'ajout à reussi 
            </remarks>
        </member>
        <member name="M:Mercure.Vue.ApplicatioCentrale.ModifierArticle">
            <summary>
            Cette méthode permet l'ouverture d'une fenetre modale permettant la modification d'un article <see cref="T:Mercure.Vue.Ajouter_Modifier_Article"/>
            </summary>
            <remarks>
                la fenetre modale ne s'ouvre que si une ligne est sélectionnée , et la modification se base sur la colonne contenant la reférence de l'article
                on met à jour la liste view des articles <see cref="F:Mercure.Vue.ApplicatioCentrale.ListView_Articles"/> , on change  le status de l'application si la modification à reussi 
            </remarks>
        </member>
        <member name="M:Mercure.Vue.ApplicatioCentrale.SupprimerArticle">
            <summary>
                Cette méthode permet de supprimer un article dans la base de données 
            </summary>
            <remarks>
                la suppression est faite que si une ligne est sélectionnée , et un message box est affiché pour demander à l'utilisateur de confirmer la suppression
                on met à jour la liste view des articles <see cref="F:Mercure.Vue.ApplicatioCentrale.ListView_Articles"/> , on change  le status de l'application si la suppression à reussi 
            </remarks>
        </member>
        <member name="M:Mercure.Vue.ApplicatioCentrale.ListView_Articles_MouseClick(System.Object,System.Windows.Forms.MouseEventArgs)">
            <summary>
             Cette methode permet de gerer l'évènement d'un clic droit en ouvrant un menu  <see cref="F:Mercure.Vue.ApplicatioCentrale.ContextMenu_OptionClicDroit"/> contenant des options d'ajout , suppression et de modification d'un article
            </summary>
            <param name="sender">object qui envoie l'action </param>
            <param name="e">Evenement envoyé </param>
        </member>
        <member name="M:Mercure.Vue.ApplicatioCentrale.ListView_Articles_MouseDoubleClick(System.Object,System.Windows.Forms.MouseEventArgs)">
            <summary>
             Cette methode permet de gerer l'evènement double clic qui permet la modification d'un article <see cref="M:Mercure.Vue.ApplicatioCentrale.ModifierArticle"/>
            </summary>
            <param name="sender">object qui envoie l'action </param>
            <param name="e">Evenement envoyé </param>
        </member>
        <member name="M:Mercure.Vue.ApplicatioCentrale.ListView_Articles_KeyDown(System.Object,System.Windows.Forms.KeyEventArgs)">
            <summary>
             Cette methode permet de gérer les évènements claviers
            -  F5 : pour mettre à jour la liste view <see cref="M:Mercure.Vue.ApplicatioCentrale.MettreJourArticles"/>
            - Supp : pour supprimer un article <see cref="M:Mercure.Vue.ApplicatioCentrale.SupprimerArticle"/>
            - Entrer : pour modifier un article <see cref="M:Mercure.Vue.ApplicatioCentrale.ModifierArticle"/>
             
            </summary>
            <param name="sender">object qui envoie l'action </param>
            <param name="e">Evenement envoyé </param>
        </member>
        <member name="M:Mercure.Vue.ApplicatioCentrale.AfficherFamilleToolStripMenuItem_Click(System.Object,System.EventArgs)">
            <summary>
             Cette methode permet d'ouvrir une fenetre modale <see cref="T:Mercure.Vue.ApplicationFamille"/> pour l'affichage des familles 
            </summary>
            <param name="sender">object qui envoie l'action </param>
            <param name="e">Evenement envoyé </param>
        </member>
        <member name="M:Mercure.Vue.ApplicatioCentrale.AjouterFamilleToolStripMenuItem_Click(System.Object,System.EventArgs)">
            <summary>
             Cette methode permet d'ouvrir une fenetre modale <see cref="T:Mercure.Vue.Ajouter_Modifier_Famille"/> pour l'ajout d'une famille 
            </summary>
            <param name="sender">object qui envoie l'action </param>
            <param name="e">Evenement envoyé </param>
        </member>
        <member name="M:Mercure.Vue.ApplicatioCentrale.AfficherSousFamilleToolStripMenuItem_Click(System.Object,System.EventArgs)">
            <summary>
             Cette methode permet d'ouvrir une fenetre modale <see cref="T:Mercure.Vue.ApplicationSousFamille"/> pour l'affichage des sous familles 
            </summary>
            <param name="sender">object qui envoie l'action </param>
            <param name="e">Evenement envoyé </param>
        </member>
        <member name="M:Mercure.Vue.ApplicatioCentrale.AjouterSousFamilleToolStripMenuItem_Click(System.Object,System.EventArgs)">
            <summary>
             Cette methode permet d'ouvrir une fenetre modale <see cref="T:Mercure.Vue.Ajouter_Modifier_SousFamille"/> pour l'ajout d'une sous famille 
            </summary>
            <param name="sender">object qui envoie l'action </param>
            <param name="e">Evenement envoyé </param>
        </member>
        <member name="M:Mercure.Vue.ApplicatioCentrale.AfficherMarqueToolStripMenuItem_Click(System.Object,System.EventArgs)">
            <summary>
             Cette methode permet d'ouvrir une fenetre modale <see cref="T:Mercure.Vue.ApplicationMarque"/> pour l'affichage des marques 
            </summary>
            <param name="sender">object qui envoie l'action </param>
            <param name="e">Evenement envoyé </param>
        </member>
        <member name="M:Mercure.Vue.ApplicatioCentrale.AjouterMarqueToolStripMenuItem_Click(System.Object,System.EventArgs)">
            <summary>
             Cette methode permet d'ouvrir une fenetre modale <see cref="T:Mercure.Vue.Ajouter_Modifier_Marque"/> pour l'ajout d'une marque
            </summary>
            <param name="sender">object qui envoie l'action </param>
            <param name="e">Evenement envoyé </param>
        </member>
        <member name="M:Mercure.Vue.ApplicatioCentrale.OuvrirToolStripMenuItem_Click(System.Object,System.EventArgs)">
            <summary>
             Cette methode permet d'ouvrir une fenetre modale <see cref="T:Mercure.Vue.Fenetre_Integration"/> pour l'intégration ou mise jour des données de la base de données à travers le fichier XML
            </summary>
            <param name="sender">object qui envoie l'action </param>
            <param name="e">Evenement envoyé </param>
        </member>
        <member name="M:Mercure.Vue.ApplicatioCentrale.AjouterToolStripMenuItem3_Click(System.Object,System.EventArgs)">
            <summary>
             Cette methode gere l'évènement de clic sur l'option ajout du <see cref="F:Mercure.Vue.ApplicatioCentrale.ContextMenu_OptionClicDroit"/> pour ajouter un article 
             gràce la fonction <see cref="M:Mercure.Vue.ApplicatioCentrale.AjouterArticle"/>
            </summary>
            <param name="sender">object qui envoie l'action </param>
            <param name="e">Evenement envoyé </param>
        </member>
        <member name="M:Mercure.Vue.ApplicatioCentrale.ModifierToolStripMenuItem_Click(System.Object,System.EventArgs)">
            <summary>
             Cette methode gere l'évènement de clic sur l'option modifier du <see cref="F:Mercure.Vue.ApplicatioCentrale.ContextMenu_OptionClicDroit"/> pour modifier un article 
             gràce la fonction <see cref="M:Mercure.Vue.ApplicatioCentrale.ModifierArticle"/>
            </summary>
            <param name="sender">object qui envoie l'action </param>
            <param name="e">Evenement envoyé </param>
        </member>
        <member name="M:Mercure.Vue.ApplicatioCentrale.SupprimerToolStripMenuItem_Click(System.Object,System.EventArgs)">
            <summary>
             Cette methode gere l'évènement de clic sur l'option supprimer du <see cref="F:Mercure.Vue.ApplicatioCentrale.ContextMenu_OptionClicDroit"/> pour supprimer un article 
             gràce la fonction <see cref="M:Mercure.Vue.ApplicatioCentrale.SupprimerArticle"/>
            </summary>
            <param name="sender">object qui envoie l'action </param>
            <param name="e">Evenement envoyé </param>
        </member>
        <member name="M:Mercure.Vue.ApplicatioCentrale.ToolStripButton_AjoutArticle_Click(System.Object,System.EventArgs)">
            <summary>
            Cette methode gere l'évènement de clic sur le bouton ajout de la barre d'outil pour ajouter un article voir <see cref="M:Mercure.Vue.ApplicatioCentrale.AjouterArticle"/>
            </summary>
            <param name="sender">object qui envoie l'action </param>
            <param name="e">Evenement envoyé </param>
        </member>
        <member name="M:Mercure.Vue.ApplicatioCentrale.QuitterApplication">
            <summary>
             Cette methode permet de fermer l'application et de se deconnecter de la base de données 
            </summary>
        </member>
        <member name="M:Mercure.Vue.ApplicatioCentrale.QuitterToolStripMenuItem_Click(System.Object,System.EventArgs)">
            <summary>
            Cette methode gere l'évènement de clic sur le menu quitter ,  pour quitter l'application  voir <see cref="M:Mercure.Vue.ApplicatioCentrale.QuitterApplication"/>
            </summary>
            <param name="sender">object qui envoie l'action </param>
            <param name="e">Evenement envoyé </param>
        </member>
        <member name="M:Mercure.Vue.ApplicatioCentrale.ToolStripButton_QuitterApplication_Click(System.Object,System.EventArgs)">
            <summary>
            Cette methode gere l'évènement de clic sur le bouton quitter de la barre d'outil pour quitter l'application  voir <see cref="M:Mercure.Vue.ApplicatioCentrale.QuitterApplication"/>
            </summary>
            <param name="sender">object qui envoie l'action </param>
            <param name="e">Evenement envoyé </param>
        </member>
        <member name="F:Mercure.Vue.ApplicatioCentrale.components">
            <summary>
            Variable nécessaire au concepteur.
            </summary>
        </member>
        <member name="M:Mercure.Vue.ApplicatioCentrale.Dispose(System.Boolean)">
            <summary>
            Nettoyage des ressources utilisées.
            </summary>
            <param name="disposing">true si les ressources managées doivent être supprimées ; sinon, false.</param>
        </member>
        <member name="M:Mercure.Vue.ApplicatioCentrale.InitializeComponent">
            <summary>
            Méthode requise pour la prise en charge du concepteur - ne modifiez pas
            le contenu de cette méthode avec l'éditeur de code.
            </summary>
        </member>
        <member name="T:Mercure.Vue.ApplicationFamille">
            <summary>
             Cette classe represente l'application de la famille, elle permet la gestion des familles 
             , comme : 
             
             - L'affichage : 
                - Des familles
             - L'Ajout d'une Famille
             - La modification d'une famille 
             - la suppresion d'une famille 
             - Quitter l'application
             - Un status pour afficher la dernière action 
            </summary>
        </member>
        <member name="F:Mercure.Vue.ApplicationFamille.ColumnTri">
            <summary>
             Attribut permettant le tri sur une colonne 
            </summary>
        </member>
        <member name="F:Mercure.Vue.ApplicationFamille.GroupTri">
            <summary>
            Attribut des gestions des groupes sur les colonnes 
            </summary>
        </member>
        <member name="M:Mercure.Vue.ApplicationFamille.#ctor">
            <summary>
            Constructeur d'un objet de type ApplicationFamille
            </summary>
        </member>
        <member name="M:Mercure.Vue.ApplicationFamille.MettreJourFamilles">
            <summary>
            Cette methode permet de mettre à jour la liste view contenant les familles  
            </summary>
            <remarks>
             On libère la liste view puis la remplie avec des nouvelles familles 
            </remarks>
        </member>
        <member name="M:Mercure.Vue.ApplicationFamille.RemplirListeFamille">
            <summary>
             Cette methode permet d'aller chercher dans la base de données Toutes les familles et remplir la liste View de ces familles
             , en indiquant les noms de colonne 
            </summary>
        </member>
        <member name="M:Mercure.Vue.ApplicationFamille.ChangementStatus(System.String)">
            <summary>
             Cette methode permet de changer le label status de l'application lors d'une opération
            </summary>
            <param name="chaine"> l'action faite sur l'application </param>
        </member>
        <member name="M:Mercure.Vue.ApplicationFamille.AjouterFamille">
            <summary>
             Cette méthode permet d'ouvir une fenetre modale d'ajout d'une famille <see cref="T:Mercure.Vue.Ajouter_Modifier_Famille"/>
            </summary>
            <remarks>
                Après la fermeture de cette fenetre modale , on met à jour la liste view des familles <see cref="F:Mercure.Vue.ApplicationFamille.ListView_Famille"/>  et 
                on change  le status de l'application si l'ajout à reussi 
            </remarks>
        </member>
        <member name="M:Mercure.Vue.ApplicationFamille.ModifierFamille">
            <summary>
            Cette méthode permet l'ouverture d'une fenetre modale permettant la modification d'une famille <see cref="T:Mercure.Vue.Ajouter_Modifier_Famille"/>
            </summary>
            <remarks>
                la fenetre modale ne s'ouvre que si une ligne est sélectionnée , et la modification se base sur la colonne contenant la reférence de la famille
                on met à jour la liste view des familles <see cref="F:Mercure.Vue.ApplicationFamille.ListView_Famille"/> , on change  le status de l'application si la modification à reussi 
            </remarks>
        </member>
        <member name="M:Mercure.Vue.ApplicationFamille.SupprimerFamille">
            <summary>
                Cette méthode permet de supprimer une famille dans la base de données 
            </summary>
            <remarks>
                la suppression est faite que si une ligne est sélectionnée , et un message box est affiché pour demander à l'utilisateur de confirmer la suppression
                on met à jour la liste view des familles <see cref="F:Mercure.Vue.ApplicationFamille.ListView_Famille"/> , on change  le status de l'application si la suppression à reussi 
            </remarks>
        </member>
        <member name="M:Mercure.Vue.ApplicationFamille.ListView_Famille_MouseClick(System.Object,System.Windows.Forms.MouseEventArgs)">
            <summary>
             Cette methode permet de gerer l'évènement d'un clic droit en ouvrant un menu  <see cref="F:Mercure.Vue.ApplicationFamille.ContextMenu_OptionClicDroit"/> contenant des options d'ajout , suppression et de modification d'une famille
            </summary>
            <param name="sender">object qui envoie l'action </param>
            <param name="e">Evenement envoyé </param>
        </member>
        <member name="M:Mercure.Vue.ApplicationFamille.ListView_Famille_MouseDoubleClick(System.Object,System.Windows.Forms.MouseEventArgs)">
            <summary>
             Cette methode permet de gerer l'evènement double clic qui permet la modification d'une famille  <see cref="M:Mercure.Vue.ApplicationFamille.ModifierFamille"/>
            </summary>
            <param name="sender">object qui envoie l'action </param>
            <param name="e">Evenement envoyé </param>
        </member>
        <member name="M:Mercure.Vue.ApplicationFamille.ListView_Famille_KeyDown(System.Object,System.Windows.Forms.KeyEventArgs)">
            <summary>
             Cette methode permet de gérer les évènements claviers
            -  F5 : pour mettre à jour la liste view <see cref="M:Mercure.Vue.ApplicationFamille.MettreJourFamilles"/>
            - Supp : pour supprimer une famille <see cref="M:Mercure.Vue.ApplicationFamille.SupprimerFamille"/>
            - Entrer : pour modifier une famille <see cref="M:Mercure.Vue.ApplicationFamille.ModifierFamille"/>
             
            </summary>
            <param name="sender">object qui envoie l'action </param>
            <param name="e">Evenement envoyé </param>
        </member>
        <member name="M:Mercure.Vue.ApplicationFamille.AjouterToolStripMenuItem_Click(System.Object,System.EventArgs)">
            <summary>
             Cette methode gere l'évènement de clic sur l'option ajout du <see cref="F:Mercure.Vue.ApplicationFamille.ContextMenu_OptionClicDroit"/> pour ajouter une famille
             gràce la fonction <see cref="M:Mercure.Vue.ApplicationFamille.AjouterFamille"/>
            </summary>
            <param name="sender">object qui envoie l'action </param>
            <param name="e">Evenement envoyé </param>
        </member>
        <member name="M:Mercure.Vue.ApplicationFamille.ModifierToolStripMenuItem_Click(System.Object,System.EventArgs)">
            <summary>
             Cette methode gere l'évènement de clic sur l'option modifier du <see cref="F:Mercure.Vue.ApplicationFamille.ContextMenu_OptionClicDroit"/> pour modifier une famille
             gràce la fonction <see cref="M:Mercure.Vue.ApplicationFamille.ModifierFamille"/>
            </summary>
            <param name="sender">object qui envoie l'action </param>
            <param name="e">Evenement envoyé </param>
        </member>
        <member name="M:Mercure.Vue.ApplicationFamille.SupprimerToolStripMenuItem_Click(System.Object,System.EventArgs)">
            <summary>
             Cette methode gere l'évènement de clic sur l'option supprimer du <see cref="F:Mercure.Vue.ApplicationFamille.ContextMenu_OptionClicDroit"/> pour supprimer une famille
             gràce la fonction <see cref="M:Mercure.Vue.ApplicationFamille.SupprimerFamille"/>
            </summary>
            <param name="sender">object qui envoie l'action </param>
            <param name="e">Evenement envoyé </param>
        </member>
        <member name="M:Mercure.Vue.ApplicationFamille.ToolStripButton_AjoutFamille_Click(System.Object,System.EventArgs)">
            <summary>
            Cette methode gere l'évènement de clic sur le bouton ajout de la barre d'outil pour ajouter une famille voir <see cref="M:Mercure.Vue.ApplicationFamille.AjouterFamille"/>
            </summary>
            <param name="sender">object qui envoie l'action </param>
            <param name="e">Evenement envoyé </param>
        </member>
        <member name="F:Mercure.Vue.ApplicationFamille.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Mercure.Vue.ApplicationFamille.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Mercure.Vue.ApplicationFamille.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:Mercure.Vue.ApplicationMarque">
            <summary>
             Cette classe represente l'application de la marque , elle permet la gestion des marques 
             , comme : 
             
             - L'affichage : 
                - Des marques
             - L'Ajout d'une marque
             - La modification d'une marque 
             - la suppresion d'une marque 
             - Quitter l'application
             - Un status pour afficher la dernière action 
            </summary>
        </member>
        <member name="F:Mercure.Vue.ApplicationMarque.ColumnTri">
            <summary>
             Attribut permettant le tri sur une colonne 
            </summary>
        </member>
        <member name="F:Mercure.Vue.ApplicationMarque.GroupTri">
            <summary>
            Attribut des gestions des groupes sur les colonnes 
            </summary>
        </member>
        <member name="M:Mercure.Vue.ApplicationMarque.#ctor">
            <summary>
            Constructeur d'un objet de type ApplicationMarque
            </summary>
        </member>
        <member name="M:Mercure.Vue.ApplicationMarque.MettreJourMarques">
            <summary>
            Cette methode permet de mettre à jour la liste view contenant les marques  
            </summary>
            <remarks>
             On libère la liste view puis la remplie avec des nouvelles marques 
            </remarks>
        </member>
        <member name="M:Mercure.Vue.ApplicationMarque.RemplirListeMarque">
            <summary>
             Cette methode permet d'aller chercher dans la base de données Toutes les marques et remplir la liste View de ces marques
             , en indiquant les noms de colonne 
            </summary>
        </member>
        <member name="M:Mercure.Vue.ApplicationMarque.ChangementStatus(System.String)">
            <summary>
             Cette methode permet de changer le label status de l'application lors d'une opération
            </summary>
            <param name="chaine"> l'action faite sur l'application </param>
        </member>
        <member name="M:Mercure.Vue.ApplicationMarque.AjouterMarque">
            <summary>
             Cette méthode permet d'ouvir une fenetre modale d'ajout d'une marque <see cref="T:Mercure.Vue.Ajouter_Modifier_Marque"/>
            </summary>
            <remarks>
                Après la fermeture de cette fenetre modale , on met à jour la liste view des marques <see cref="F:Mercure.Vue.ApplicationMarque.ListView_Marque"/>  et 
                on change  le status de l'application si l'ajout à reussi 
            </remarks>
        </member>
        <member name="M:Mercure.Vue.ApplicationMarque.ModifierMarque">
            <summary>
            Cette méthode permet l'ouverture d'une fenetre modale permettant la modification d'une marque <see cref="T:Mercure.Vue.Ajouter_Modifier_Marque"/>
            </summary>
            <remarks>
                la fenetre modale ne s'ouvre que si une ligne est sélectionnée , et la modification se base sur la colonne contenant la reférence de la marque
                on met à jour la liste view des marques <see cref="F:Mercure.Vue.ApplicationMarque.ListView_Marque"/> , on change  le status de l'application si la modification à reussi 
            </remarks>
        </member>
        <member name="M:Mercure.Vue.ApplicationMarque.SupprimerMarque">
            <summary>
                Cette méthode permet de supprimer une marque dans la base de données 
            </summary>
            <remarks>
                la suppression est faite que si une ligne est sélectionnée , et un message box est affiché pour demander à l'utilisateur de confirmer la suppression
                on met à jour la liste view des marques <see cref="F:Mercure.Vue.ApplicationMarque.ListView_Marque"/> , on change  le status de l'application si la suppression à reussi 
            </remarks>
        </member>
        <member name="M:Mercure.Vue.ApplicationMarque.ListView_Marque_MouseClick(System.Object,System.Windows.Forms.MouseEventArgs)">
            <summary>
             Cette methode permet de gerer l'évènement d'un clic droit en ouvrant un menu  <see cref="F:Mercure.Vue.ApplicationMarque.ContextMenu_OptionClicDroit"/> contenant des options d'ajout , suppression et de modification d'une marque
            </summary>
            <param name="sender">object qui envoie l'action </param>
            <param name="e">Evenement envoyé </param>
        </member>
        <member name="M:Mercure.Vue.ApplicationMarque.ListView_Marque_MouseDoubleClick(System.Object,System.Windows.Forms.MouseEventArgs)">
            <summary>
             Cette methode permet de gerer l'evènement double clic qui permet la modification d'une marque  <see cref="M:Mercure.Vue.ApplicationMarque.ModifierMarque"/>
            </summary>
            <param name="sender">object qui envoie l'action </param>
            <param name="e">Evenement envoyé </param>
        </member>
        <member name="M:Mercure.Vue.ApplicationMarque.ListView_Marque_KeyDown(System.Object,System.Windows.Forms.KeyEventArgs)">
            <summary>
             Cette methode permet de gérer les évènements claviers
            -  F5 : pour mettre à jour la liste view <see cref="M:Mercure.Vue.ApplicationMarque.MettreJourMarques"/>
            - Supp : pour supprimer une marque <see cref="M:Mercure.Vue.ApplicationMarque.SupprimerMarque"/>
            - Entrer : pour modifier une marque <see cref="M:Mercure.Vue.ApplicationMarque.ModifierMarque"/>
             
            </summary>
            <param name="sender">object qui envoie l'action </param>
            <param name="e">Evenement envoyé </param>
        </member>
        <member name="M:Mercure.Vue.ApplicationMarque.AjouterToolStripMenuItem_Click(System.Object,System.EventArgs)">
            <summary>
             Cette methode gere l'évènement de clic sur l'option ajout du <see cref="F:Mercure.Vue.ApplicationMarque.ContextMenu_OptionClicDroit"/> pour ajouter une marque
             gràce la fonction <see cref="M:Mercure.Vue.ApplicationMarque.AjouterMarque"/>
            </summary>
            <param name="sender">object qui envoie l'action </param>
            <param name="e">Evenement envoyé </param>
        </member>
        <member name="M:Mercure.Vue.ApplicationMarque.ModifierToolStripMenuItem_Click(System.Object,System.EventArgs)">
            <summary>
             Cette methode gere l'évènement de clic sur l'option modifier du <see cref="F:Mercure.Vue.ApplicationMarque.ContextMenu_OptionClicDroit"/> pour modifier une marque
             gràce la fonction <see cref="M:Mercure.Vue.ApplicationMarque.ModifierMarque"/>
            </summary>
            <param name="sender">object qui envoie l'action </param>
            <param name="e">Evenement envoyé </param>
        </member>
        <member name="M:Mercure.Vue.ApplicationMarque.SupprimerToolStripMenuItem_Click(System.Object,System.EventArgs)">
            <summary>
             Cette methode gere l'évènement de clic sur l'option supprimer du <see cref="F:Mercure.Vue.ApplicationMarque.ContextMenu_OptionClicDroit"/> pour supprimer une marque
             gràce la fonction <see cref="M:Mercure.Vue.ApplicationMarque.SupprimerMarque"/>
            </summary>
            <param name="sender">object qui envoie l'action </param>
            <param name="e">Evenement envoyé </param>
        </member>
        <member name="M:Mercure.Vue.ApplicationMarque.ToolStripButton_AjoutMarque_Click(System.Object,System.EventArgs)">
            <summary>
            Cette methode gere l'évènement de clic sur le bouton ajout de la barre d'outil pour ajouter une marque voir <see cref="M:Mercure.Vue.ApplicationMarque.AjouterMarque"/>
            </summary>
            <param name="sender">object qui envoie l'action </param>
            <param name="e">Evenement envoyé </param>
        </member>
        <member name="F:Mercure.Vue.ApplicationMarque.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Mercure.Vue.ApplicationMarque.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Mercure.Vue.ApplicationMarque.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:Mercure.Vue.ApplicationSousFamille">
            <summary>
             Cette classe represente l'application de la sous famille, elle permet la gestion des sous familles 
             , comme : 
             
             - L'affichage : 
                - Des sous  familles
             - L'Ajout d'une sous Famille
             - La modification d'une sous famille 
             - la suppresion d'une sous famille 
             - Quitter l'application
             - Un status pour afficher la dernière action 
            </summary>
        </member>
        <member name="F:Mercure.Vue.ApplicationSousFamille.ColumnTri">
            <summary>
             Attribut permettant le tri sur une colonne 
            </summary>
        </member>
        <member name="F:Mercure.Vue.ApplicationSousFamille.GroupTri">
            <summary>
            Attribut des gestions des groupes sur les colonnes 
            </summary>
        </member>
        <member name="M:Mercure.Vue.ApplicationSousFamille.#ctor">
            <summary>
            Constructeur d'un objet de type ApplicationSousFamille
            </summary>
        </member>
        <member name="M:Mercure.Vue.ApplicationSousFamille.MettreJourSousFamilles">
            <summary>
            Cette methode permet de mettre à jour la liste view contenant les sous familles  
            </summary>
            <remarks>
             On libère la liste view puis la remplie avec des nouvelles sous familles 
            </remarks>
        </member>
        <member name="M:Mercure.Vue.ApplicationSousFamille.RemplirListeSousFamille">
            <summary>
             Cette methode permet d'aller chercher dans la base de données Toutes les sous familles et remplir la liste View de ces sous familles
             , en indiquant les noms de colonne 
            </summary>
        </member>
        <member name="M:Mercure.Vue.ApplicationSousFamille.ChangementStatus(System.String)">
            <summary>
             Cette methode permet de changer le label status de l'application lors d'une opération
            </summary>
            <param name="chaine"> l'action faite sur l'application </param>
        </member>
        <member name="M:Mercure.Vue.ApplicationSousFamille.AjouterSousFamille">
            <summary>
             Cette méthode permet d'ouvir une fenetre modale d'ajout d'une sous famille <see cref="T:Mercure.Vue.Ajouter_Modifier_SousFamille"/>
            </summary>
            <remarks>
                Après la fermeture de cette fenetre modale , on met à jour la liste view des sous familles <see cref="F:Mercure.Vue.ApplicationSousFamille.ListView_SousFamille"/>  et 
                on change  le status de l'application si l'ajout à reussi 
            </remarks>
        </member>
        <member name="M:Mercure.Vue.ApplicationSousFamille.ModifierSousFamille">
            <summary>
            Cette méthode permet l'ouverture d'une fenetre modale permettant la modification d'une sous famille <see cref="T:Mercure.Vue.Ajouter_Modifier_SousFamille"/>
            </summary>
            <remarks>
                la fenetre modale ne s'ouvre que si une ligne est sélectionnée , et la modification se base sur la colonne contenant la reférence de la sous famille
                on met à jour la liste view des sous  familles <see cref="F:Mercure.Vue.ApplicationSousFamille.ListView_SousFamille"/> , on change  le status de l'application si la modification à reussi 
            </remarks>
        </member>
        <member name="M:Mercure.Vue.ApplicationSousFamille.SupprimerSousFamille">
            <summary>
                Cette méthode permet de supprimer une sous famille dans la base de données 
            </summary>
            <remarks>
                la suppression est faite que si une ligne est sélectionnée , et un message box est affiché pour demander à l'utilisateur de confirmer la suppression
                on met à jour la liste view des sous familles <see cref="F:Mercure.Vue.ApplicationSousFamille.ListView_SousFamille"/> , on change  le status de l'application si la suppression à reussi 
            </remarks>
        </member>
        <member name="M:Mercure.Vue.ApplicationSousFamille.ListView_SousFamille_KeyDown(System.Object,System.Windows.Forms.KeyEventArgs)">
            <summary>
             Cette methode permet de gérer les évènements claviers
            -  F5 : pour mettre à jour la liste view <see cref="M:Mercure.Vue.ApplicationSousFamille.MettreJourSousFamilles"/>
            - Supp : pour supprimer une sous famille <see cref="M:Mercure.Vue.ApplicationSousFamille.SupprimerSousFamille"/>
            - Entrer : pour modifier une sous famille <see cref="M:Mercure.Vue.ApplicationSousFamille.ModifierSousFamille"/>
             
            </summary>
            <param name="sender">object qui envoie l'action </param>
            <param name="e">Evenement envoyé </param>
        </member>
        <member name="M:Mercure.Vue.ApplicationSousFamille.ListView_SousFamille_MouseClick(System.Object,System.Windows.Forms.MouseEventArgs)">
            <summary>
             Cette methode permet de gerer l'évènement d'un clic droit en ouvrant un menu  <see cref="F:Mercure.Vue.ApplicationSousFamille.ContextMenu_OptionClicDroit"/> contenant des options d'ajout , suppression et de modification d'une sous famille
            </summary>
            <param name="sender">object qui envoie l'action </param>
            <param name="e">Evenement envoyé </param>
        </member>
        <member name="M:Mercure.Vue.ApplicationSousFamille.ListView_SousFamille_MouseDoubleClick(System.Object,System.Windows.Forms.MouseEventArgs)">
            <summary>
             Cette methode permet de gerer l'evènement double clic qui permet la modification d'une sous famille  <see cref="M:Mercure.Vue.ApplicationSousFamille.ModifierSousFamille"/>
            </summary>
            <param name="sender">object qui envoie l'action </param>
            <param name="e">Evenement envoyé </param>
        </member>
        <member name="M:Mercure.Vue.ApplicationSousFamille.AjouterToolStripMenuItem_Click(System.Object,System.EventArgs)">
            <summary>
             Cette methode gere l'évènement de clic sur l'option ajout du <see cref="F:Mercure.Vue.ApplicationSousFamille.ContextMenu_OptionClicDroit"/> pour ajouter une sous famille
             gràce la fonction <see cref="M:Mercure.Vue.ApplicationSousFamille.AjouterSousFamille"/>
            </summary>
            <param name="sender">object qui envoie l'action </param>
            <param name="e">Evenement envoyé </param>
        </member>
        <member name="M:Mercure.Vue.ApplicationSousFamille.ModifierToolStripMenuItem_Click(System.Object,System.EventArgs)">
            <summary>
             Cette methode gere l'évènement de clic sur l'option modifier du <see cref="F:Mercure.Vue.ApplicationSousFamille.ContextMenu_OptionClicDroit"/> pour modifier une sous famille
             gràce la fonction <see cref="M:Mercure.Vue.ApplicationSousFamille.ModifierSousFamille"/>
            </summary>
            <param name="sender">object qui envoie l'action </param>
            <param name="e">Evenement envoyé </param>
        </member>
        <member name="M:Mercure.Vue.ApplicationSousFamille.SupprimerToolStripMenuItem_Click(System.Object,System.EventArgs)">
            <summary>
             Cette methode gere l'évènement de clic sur l'option supprimer du <see cref="F:Mercure.Vue.ApplicationSousFamille.ContextMenu_OptionClicDroit"/> pour supprimer une sous famille
             gràce la fonction <see cref="M:Mercure.Vue.ApplicationSousFamille.SupprimerSousFamille"/>
            </summary>
            <param name="sender">object qui envoie l'action </param>
            <param name="e">Evenement envoyé </param>
        </member>
        <member name="M:Mercure.Vue.ApplicationSousFamille.ToolStripButton_AjoutSousFamille_Click(System.Object,System.EventArgs)">
            <summary>
            Cette methode gere l'évènement de clic sur le bouton ajout de la barre d'outil pour ajouter une sous famille voir <see cref="M:Mercure.Vue.ApplicationSousFamille.AjouterSousFamille"/>
            </summary>
            <param name="sender">object qui envoie l'action </param>
            <param name="e">Evenement envoyé </param>
        </member>
        <member name="F:Mercure.Vue.ApplicationSousFamille.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Mercure.Vue.ApplicationSousFamille.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Mercure.Vue.ApplicationSousFamille.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:Mercure.Vue.Fenetre_Integration">
            <summary>
             Cette classe représente la fenetre d'intégration d'un fichier xml avec un mode d'intégration dans la base de données
            </summary>
            <remarks>
                Cette fenetre permet de : 
                    - choisir un fichier de type xml
                    - Choisir un mode d'intégration : intégration ou mise à jour 
                    - Afficher la barre de progression  lors de l'intégration / mise à jour 
                    - Les actions faites sur la base de données lors de l'intégration / mise à jour 
            </remarks>
        </member>
        <member name="F:Mercure.Vue.Fenetre_Integration.NomFicherXML">
            <summary>
             Attribut indiquant le chemin du fichier xml  choisie 
            </summary>
        </member>
        <member name="F:Mercure.Vue.Fenetre_Integration.Count">
            <summary>
             Attribut indiquant le nombre de noeud article dans le fichier xml 
            </summary>
        </member>
        <member name="F:Mercure.Vue.Fenetre_Integration.ResultatErreur">
            <summary>
            Attribut contenant le resultat de chaque opération 
            </summary>
        </member>
        <member name="T:Mercure.Vue.Fenetre_Integration.AjouterFinLigneResultatErreurs">
            <summary>
             Cette methode de type delegate permettant de signaler l'ajout en fin de ligne d'un resulat
            </summary>
            <param name="text">le resultat d'une opération </param>
        </member>
        <member name="F:Mercure.Vue.Fenetre_Integration.Reussi_">
            <summary>
             Attribut permettant de savoir s'il y a eu intégration ou mise jour de la base de données, par défaut -1 
            </summary>
        </member>
        <member name="P:Mercure.Vue.Fenetre_Integration.Reussi">
            <summary>
             Cette propriété permet d'avoir l'etat de l'opération l'ajout / modification 
            </summary>
        </member>
        <member name="M:Mercure.Vue.Fenetre_Integration.#ctor">
            <summary>
             Constructeur par defaut 
            </summary>
        </member>
        <member name="M:Mercure.Vue.Fenetre_Integration.Button_Choix_Fichier_Click(System.Object,System.EventArgs)">
             <summary>
              Cette methode permet de choisir un fichier après un click  sur le bouton de choix de fichier 
            
             </summary>
             <param name="sender">object qui envoie l'action </param>
             <param name="e">Evenement envoyé </param>
             <remarks>
                 Le choix de fichier est fait avec un <see cref="T:System.Windows.Forms.OpenFileDialog"/>
             </remarks>
        </member>
        <member name="M:Mercure.Vue.Fenetre_Integration.Text_Chemin_Fichier_Choisi_TextChanged(System.Object,System.EventArgs)">
            <summary>
             Cette permet de gerer l'évenement : quand le contenu du text Box indiquant le chemin du fichier choisi change ,
             elle sert réellement à activer ou désactiviser le bouton d'intégration / mise à jour si un fichier n'est pas choisie 
             donc si le text box est vide ou null 
            </summary>
            <param name="sender">object qui envoie l'action </param>
            <param name="e">Evenement envoyé </param>
        </member>
        <member name="M:Mercure.Vue.Fenetre_Integration.Travail_En_Arriere_Plan_DoWork(System.Object,System.ComponentModel.DoWorkEventArgs)">
            <summary>
             Cette methode permet de faire le travail du <see cref="T:System.ComponentModel.BackgroundWorker"/> , elle est directement déclenché au moment 
             où notre back Worker veut lancer un boulot .
             Elle lance soit l'intégration ou la mise à jour en fontion du bouton radio choisie 
            </summary>
            <param name="sender">object qui envoie l'action </param>
            <param name="e">Evenement envoyé </param>
        </member>
        <member name="M:Mercure.Vue.Fenetre_Integration.Travail_En_Arriere_Plan_ProgressChanged(System.Object,System.ComponentModel.ProgressChangedEventArgs)">
            <summary>
             Cette methode permet d'incrémenter la bar de progression 
            </summary>
            <param name="sender">object qui envoie l'action </param>
            <param name="e">Evenement envoyé </param>
        </member>
        <member name="M:Mercure.Vue.Fenetre_Integration.ChangerResultat(System.String)">
            <summary>
             Cette methode permet d'ajouter en fin de ligne dans la Text Box d'affichage le resultat d'une opération sur la base de données
            </summary>
            <param name="text"> resultat d'une opération </param>
        </member>
        <member name="M:Mercure.Vue.Fenetre_Integration.FileIntegration">
            <summary>
            Cette methode permet de lire le contenu du fichier xml et inserer dans la base de données 
            </summary>
            <remarks>
               -  Elle supprime en premier lieu , toutes les tuples qui se trouvent dans les différents tables de la base de données 
               -  Puis ouvre et lit  le fichier XML avec <see cref="T:System.Xml.XmlDocument"/>
               -  Pour chaque noeud lu , elle cree une marque , une famille , une sous famille puis un article si ils existent pas déjà
            </remarks>
        </member>
        <member name="M:Mercure.Vue.Fenetre_Integration.FileMisejour">
            <summary>
            Cette methode permet de lire le contenu du fichier xml et mettre à jour les informations des articles dans la base de données 
            </summary>
            <remarks>
                  Elle permet de : 
               -  Ouvre et lit  le fichier XML avec <see cref="T:System.Xml.XmlDocument"/>
               -  Pour chaque noeud lu , elle met à jour un article avec les nouveaux éléments d'un fichier 
                 - si la marque , la  famille et la sous famille existent alors l'action est faite directement
                 - sinon on cree l'objet puis on met à jour l'article 
               - Si l'article n'existe pas avant dans la base de données alors il est crée
            </remarks>
        </member>
        <member name="M:Mercure.Vue.Fenetre_Integration.RadioButton_Nouvelle_Integration_CheckedChanged(System.Object,System.EventArgs)">
            <summary>
             Cette permet de d'activier ou désactivier le bouton d'intégration quand on check le bouton radio NOuvelle intégration 
            </summary>
            <param name="sender">object qui envoie l'action </param>
            <param name="e">Evenement envoyé </param>
        </member>
        <member name="M:Mercure.Vue.Fenetre_Integration.RadioButton_Mise_Jour_CheckedChanged(System.Object,System.EventArgs)">
            <summary>
             Cette permet de d'activier ou désactivier le bouton d'intégration quand on check le bouton radio Mise à jour
            </summary>
            <param name="sender">object qui envoie l'action </param>
            <param name="e">Evenement envoyé </param>
        </member>
        <member name="M:Mercure.Vue.Fenetre_Integration.Button_Integration_Click(System.Object,System.EventArgs)">
            <summary>
             Cette methode permet de lancer notre <see cref="T:System.ComponentModel.BackgroundWorker"/> après avoir cliqué sur le bouton Intégration 
            </summary>
            <param name="sender">object qui envoie l'action </param>
            <param name="e">Evenement envoyé </param>
            <remarks> 
                Elle désactive le bouton d'intégration pour empêcher l'utiliser de lancer un notre travail alors que le 1 er n'est pas fini
            </remarks>
        </member>
        <member name="F:Mercure.Vue.Fenetre_Integration.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Mercure.Vue.Fenetre_Integration.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Mercure.Vue.Fenetre_Integration.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:Mercure.Vue.GestionGroupTri">
            <summary>
               Cette classe est destiné à gerer le groupe d’éléments  qui devra refléter le trie actuel de la colonne. 
            </summary>
            <remarks>
                La formation des groupes est faite en fonction d'une colonne 
            </remarks>
        </member>
        <member name="M:Mercure.Vue.GestionGroupTri.#ctor(System.Windows.Forms.ListView)">
            <summary>
             Constructeur de l'objet GestionGroupTri
            </summary>
            <param name="list"> la liste view sur la quelle le tri se passera </param>
        </member>
        <member name="M:Mercure.Vue.GestionGroupTri.Init">
            <summary>
             Cette méthode permet de créer toutes les groupes possibles de toutes colonnes 
            </summary>
        </member>
        <member name="M:Mercure.Vue.GestionGroupTri.SetGroups(System.Int32)">
            <summary>
                Cette méthode permet de trier en fonction de l'ordre , et de former les groupes adequats de la colonne
            </summary>
            <param name="column">le numéro de la colonne </param>
        </member>
        <member name="M:Mercure.Vue.GestionGroupTri.CreerGroupsTable(System.Int32)">
            <summary>
             Cette methode cree un <see cref="T:System.Collections.Hashtable"/> les groupes avec une entrée pour chaque valeur en fonction de la colonne 
            </summary>
            <param name="column">numéro de la colonne </param>
            <returns></returns>
        </member>
        <member name="M:Mercure.Vue.GestionGroupTri.ColumnClick(System.Object,System.Windows.Forms.ColumnClickEventArgs)">
            <summary>
              Cette methode permet de gérer l'évènement clic sur une colonne de la liste view
              , pour trier la colonne en fonction de l'odre de <see cref="T:System.Windows.Forms.SortOrder"/>
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="T:Mercure.Vue.ListViewColumnTri">
            <summary>
             Cette classe permet le tri par column les éléments d'une liste view en fonction d'un ordre de trie 
            </summary>
            <remarks>
                Elle étends la classe <see cref="T:System.Collections.IComparer"/>
            </remarks>
        </member>
        <member name="F:Mercure.Vue.ListViewColumnTri.columnATrier">
            <summary>
                Spécifie la colonne à trier
            </summary>
        </member>
        <member name="F:Mercure.Vue.ListViewColumnTri.ordreTri">
            <summary>
             Spécifie l'ordre de tri .
            </summary>
        </member>
        <member name="F:Mercure.Vue.ListViewColumnTri.ObjectCompare">
            <summary>
                Objet de comparaison ne respectant pas les majuscules et minuscules
            </summary>
        </member>
        <member name="M:Mercure.Vue.ListViewColumnTri.#ctor">
            <summary>
            Constructeur par defaut 
            </summary>
            <remarks>
                On se base directement sur la 1 ere colonne
                L'orde de trie est à None , l'initailisation de l'objet permettant la comparaison des objets 
            </remarks>
        </member>
        <member name="M:Mercure.Vue.ListViewColumnTri.#ctor(System.Windows.Forms.SortOrder)">
            <summary>
             Constructeur 
            </summary>
            <param name="ordre"> l'orde de trie de la colonne </param>
            <remarks>
                On se base directement sur la 1 ere colonne
                l'initailisation de l'objet permettant la comparaison des objets 
            </remarks>
        </member>
        <member name="M:Mercure.Vue.ListViewColumnTri.Compare(System.Object,System.Object)">
             <summary>
             Cette méthode est héritée de l'interface IComparer.  Il compare les deux objets passés en effectuant une comparaison 
            qui ne tient pas compte des majuscules et des minuscules.
             </summary>
             <param name="x">Premier objet à comparer</param>
             <param name="x">Deuxième objet à comparer</param>
             <returns>Le résultat de la comparaison. "0" si équivalent, négatif si 'x' est inférieur à 'y' et positif si 'x' est supérieur à 'y'</returns>
        </member>
        <member name="P:Mercure.Vue.ListViewColumnTri.ColumnATrier">
            <summary>
             Cette propriété permet de retourner ou de modifier le numéro de colonne à trier 
            </summary>
        </member>
        <member name="P:Mercure.Vue.ListViewColumnTri.OrdreTri">
            <summary>
             Cette propriété permet de retourner ou de modifier l'ordre de tri de la colonne 
            </summary>
        </member>
        <member name="T:Mercure.Vue.ListViewGroupTri">
            <summary>
             Cette classe permet le tri par groupe dans la liste view en fonction d'un ordre de trie 
            </summary>
            <remarks>
                Elle étends la classe <see cref="T:System.Collections.IComparer"/>
            </remarks>
        </member>
        <member name="F:Mercure.Vue.ListViewGroupTri.OrdreTri_">
            <summary>
            Spécifie l'ordre de tri .
            </summary>
        </member>
        <member name="M:Mercure.Vue.ListViewGroupTri.#ctor(System.Windows.Forms.SortOrder)">
            <summary>
             Constructeur 
            </summary>
            <param name="ordre"> ordre de trie des groupes </param>
        </member>
        <member name="M:Mercure.Vue.ListViewGroupTri.Compare(System.Object,System.Object)">
            <summary>
            Cette méthode est héritée de l'interface IComparer.  Il compare les deux objets passés en effectuant une comparaison 
            </summary>
            <param name="x">Premier objet à comparer</param>
            <param name="x">Deuxième objet à comparer</param>
            <returns>Le résultat de la comparaison.positif si équivalent, sinon négatif </returns>
        </member>
        <member name="P:Mercure.Vue.ListViewGroupTri.OrdreTri">
            <summary>
             Cette propriété permet de retourner ou de modifier l'ordre de tri  
            </summary>
        </member>
        <member name="T:Mercure.InterfaceBaseDonnee.InterfaceDB">
            <summary>
             Cette classe statique , représente une interface de connexion à la base de données 
             , elle contient toutes les méthodes de traitement générale sur la base de données 
            </summary>
        </member>
        <member name="F:Mercure.InterfaceBaseDonnee.InterfaceDB.Connexion_Sqlite">
            <summary>
                l'attribut de  connexion à la base de données 
            </summary>
            <see cref="T:System.Data.SQLite.SQLiteConnection"/>
        </member>
        <member name="F:Mercure.InterfaceBaseDonnee.InterfaceDB.Commande_Sqlite">
            <summary>
             Attribut permettant de faire des commandes sql sur la base de données
            </summary>
            <see cref="T:System.Data.SQLite.SQLiteCommand"/>
        </member>
        <member name="F:Mercure.InterfaceBaseDonnee.InterfaceDB.Lecture_Donnee">
            <summary>
             Attribut permettant la lecture des données renvoyé par une commande 
            </summary>
            <see cref="T:System.Data.SQLite.SQLiteDataReader"/>
        </member>
        <member name="F:Mercure.InterfaceBaseDonnee.InterfaceDB.RepertoireCourant">
            <summary>
             le repertoir du projet 
            </summary>
            <see cref="T:System.String"/>
        </member>
        <member name="F:Mercure.InterfaceBaseDonnee.InterfaceDB.NomBaseDonnee">
            <summary>
            Le fichier, nom de la base de données 
            </summary>
            <see cref="T:System.String"/>
        </member>
        <member name="F:Mercure.InterfaceBaseDonnee.InterfaceDB.CheminBaseDonnee">
            <summary>
             Le chemin complet mennant au fichier contenant la base de données 
            </summary>
            <see cref="T:System.String"/>
        </member>
        <member name="P:Mercure.InterfaceBaseDonnee.InterfaceDB.Commande_sqlite">
            <summary>
             Cette propriété statique , correspond à une commande sqlite 
             
            </summary>
        </member>
        <member name="M:Mercure.InterfaceBaseDonnee.InterfaceDB.Connection">
            <summary>
             Cette methode permet de d'ouvrir une connexion sur la base de données 
            </summary>
        </member>
        <member name="M:Mercure.InterfaceBaseDonnee.InterfaceDB.Deconnection">
            <summary>
             Cette methode permet de se deconnecter ou fermer la connexion à la base de données
            </summary>
        </member>
        <member name="M:Mercure.InterfaceBaseDonnee.InterfaceDB.GetInstaneConnexion">
            <summary>
                Cette methode permet d'instancier une connection en suivant le processus Singleton 
               et  d'ouvrir directement la connection vers la base de données 
             
            </summary>
            <remarks> Singleton : permet d'instancer une seul fois un attribut
                - Si Connexion_Sqlite est déja instancier alors on le retourne 
                - Sinon il doit être instancier en indiquant le chemin de connection à la base de données 
            </remarks>
            <returns> l'attribut contenant la connection à la base de données   </returns>
        </member>
        <member name="M:Mercure.InterfaceBaseDonnee.InterfaceDB.DernierIdTable(System.String,System.String)">
            <summary>
             Cette methode pour une table de la base de données et son champ représentant
             les identifiants de la table nous donne le dernier identifiant de la table 
            </summary>
            <param name="nomTable"> le nom de la table </param>
            <param name="type"> la colonne / champ correspondant aux identifiants</param>
            <returns>le dernier identifiant de table </returns>
            <remarks>
                <example> Voici un exemple d'utilisation de la methode : 
                    <code> int dernierId = InterfaceDB.DernierIdTable("Marques","RefMarque")</code>
                    qui nous donne le dernier id de la table Marques de la base de données en fonction de son identifiant ici RefMarque
                </example>
            </remarks>
        </member>
        <member name="M:Mercure.InterfaceBaseDonnee.InterfaceDB.SupprimerToutTable(System.String)">
            <summary>
             Cette methode pour une table de base de données supprime toutes les tuples de la table 
            </summary>
            <param name="nomTable"> le nom de la table existante dans la base de données </param>
            <returns>le resultat de l'opération </returns>
        </member>
        <member name="T:Mercure.InterfaceBaseDonnee.InterfaceDB_Articles">
            <summary>
             Cette classe représente l'interface de requete sur la table Articles 
            </summary>
            <remarks>
                Elle utilise la classe statique <see cref="T:Mercure.InterfaceBaseDonnee.InterfaceDB"/>
            </remarks>
        </member>
        <member name="F:Mercure.InterfaceBaseDonnee.InterfaceDB_Articles.RequeteInsererArticle">
            <summary>
             Attribut contentant la requete d'insertion de la classe 
            </summary>
        </member>
        <member name="F:Mercure.InterfaceBaseDonnee.InterfaceDB_Articles.RequeteDonneeArticle">
            <summary>
             Attribut contentant la requete de selection  de la classe 
            </summary>
        </member>
        <member name="F:Mercure.InterfaceBaseDonnee.InterfaceDB_Articles.RequeteModifierArticle">
            <summary>
             Attribut contentant la requete de modification  de la classe 
            </summary>
        </member>
        <member name="F:Mercure.InterfaceBaseDonnee.InterfaceDB_Articles.Lecture_Donnee">
            <summary>
             Attribut permettant la lecture des données retournées dans une commande de la classe 
            </summary>
        </member>
        <member name="M:Mercure.InterfaceBaseDonnee.InterfaceDB_Articles.#ctor">
            <summary>
             Constructeur par defaut 
            </summary>
        </member>
        <member name="M:Mercure.InterfaceBaseDonnee.InterfaceDB_Articles.InsererArticle(System.String,System.String,System.Int32,System.Int32,System.Double,System.Int32)">
            <summary>
             cette methode d'insérer un nouveau article dans la table Articles de la base de données
            </summary>
            <param name="refArticle">l'identifiant de l'article </param>
            <param name="description"> la description de l'article </param>
            <param name="refsousfamille"> l'identifiant de la sous famille de l'article </param>
            <param name="refmarque">l'identifiant de la marque de l'artcile </param>
            <param name="prixht">le prix de l'article </param>
            <param name="quantite">la quantité de l'article </param>
            <returns>le resultat de l'opération </returns>
            <remarks>
                Elle vérifie si l'article existe ou pas avant l'insertion dans la table Articles et gère les erreurs qui peuvent survenir 
            </remarks>
        </member>
        <member name="M:Mercure.InterfaceBaseDonnee.InterfaceDB_Articles.InsererArticle(Mercure.Models.Article)">
            <summary>
                cette methode d'insérer un nouveau article dans la table Articles de la base de données
            </summary>
            <param name="article"> un objet Article représentant le nouveau article </param>
            <returns></returns>
        </member>
        <member name="M:Mercure.InterfaceBaseDonnee.InterfaceDB_Articles.ModifierArticle(System.String,System.String,System.Int32,System.Int32,System.Double,System.Int32)">
            <summary>
             Cette methode permet de modifier les informations d'un article existant 
            </summary>
            <param name="refArticle">le nouvel identifiant de l'article </param>
            <param name="description"> la nouvelle  description de l'article </param>
            <param name="refsousfamille"> le nouvel identifiant de la sous famille de l'article </param>
            <param name="refmarque">le nouvel identifiant de la marque de l'artcile </param>
            <param name="prixht">le nouveau prix de l'article </param>
            <param name="quantite">la nouvelle quantité de l'article </param>
            <returns>le resutat de l'opération </returns>
        </member>
        <member name="M:Mercure.InterfaceBaseDonnee.InterfaceDB_Articles.SupprimerArticle(System.String)">
            <summary>
             Cette methode permet de supprimer un article dans la table Articles 
             en fonction de son identifiant 
            </summary>
            <param name="refarticle"> l'identifiant de l'article à supprimer </param>
            <returns>le resultat de l'opération </returns>
        </member>
        <member name="M:Mercure.InterfaceBaseDonnee.InterfaceDB_Articles.GetArticle(System.String)">
            <summary>
            Cette methode permet d'avoir toutes les insformations d'un article dans la table Articles 
            en fonction de l'identifiant de l'article
            </summary>
            <param name="refarticle"> l'identiifiant de l'article</param>
            <returns>L'article recuperer </returns>
        </member>
        <member name="M:Mercure.InterfaceBaseDonnee.InterfaceDB_Articles.GetToutesArticle">
            <summary>
             Cette methode nous donne la liste de toutes les articles dans la table Articles de la base de données 
            </summary>
            <returns>liste d'article </returns>
            <see cref="T:Mercure.Models.Article"/>
        </member>
        <member name="M:Mercure.InterfaceBaseDonnee.InterfaceDB_Articles.GetToutesArticlebyMarque(System.Int32)">
            <summary>
             Cette methode permet d'avoir tous les articles appartenant à une marque 
            </summary>
            <param name="refMarque">l'identifiant de la marque</param>
            <returns>une liste d'article </returns>
            <see cref="T:Mercure.Models.Article"/>
        </member>
        <member name="M:Mercure.InterfaceBaseDonnee.InterfaceDB_Articles.GetToutesArticlebySousFamille(System.Int32)">
            <summary>
             Cette methode permet d'avoir tous les articles appartenant à une sous famille
            </summary>
            <param name="refSousFamille">l'identifiant de la sous famille</param>
            <returns>une liste d'article </returns>
        </member>
        <member name="T:Mercure.InterfaceBaseDonnee.InterfaceDB_Famille">
            <summary>
             Cette classe représente l'interface de requete sur la table Familles
            </summary>
            <remarks>
                Elle utilise la classe statique <see cref="T:Mercure.InterfaceBaseDonnee.InterfaceDB"/>
            </remarks>
        </member>
        <member name="F:Mercure.InterfaceBaseDonnee.InterfaceDB_Famille.RequeteInsererFamille">
            <summary>
             Attribut contentant la requete d'insertion de la classe 
            </summary>
        </member>
        <member name="F:Mercure.InterfaceBaseDonnee.InterfaceDB_Famille.RequeteDonneesFamille">
            <summary>
             Attribut contentant la requete de selection  de la classe 
            </summary>
        </member>
        <member name="F:Mercure.InterfaceBaseDonnee.InterfaceDB_Famille.RequeteModifierFamille">
            <summary>
             Attribut contentant la requete de modification  de la classe 
            </summary>
        </member>
        <member name="F:Mercure.InterfaceBaseDonnee.InterfaceDB_Famille.Lecture_Donnee">
            <summary>
             Attribut permettant la lecture des données retournées dans une commande de la classe 
            </summary>
        </member>
        <member name="M:Mercure.InterfaceBaseDonnee.InterfaceDB_Famille.#ctor">
            <summary>
            Constructeur par defaut 
            </summary>
        </member>
        <member name="M:Mercure.InterfaceBaseDonnee.InterfaceDB_Famille.InsererFamille(System.Int32,System.String)">
            <summary>
             Cette methode permet d'inserer une nouvelle famille dans la table Famille 
            </summary>
            <param name="refFamille"> l'identifiant de la nouvelle famille </param>
            <param name="nom">le nom de la famille </param>
            <returns>le resulat de l'operation </returns>
        </member>
        <member name="M:Mercure.InterfaceBaseDonnee.InterfaceDB_Famille.InsererFamille(System.String)">
            <summary>
             Cette methode permet d'inserer une nouvelle famille dans la table Famille 
            </summary>
            <param name="nom">le nom de la famille </param>
            <returns>le resulat de l'operation </returns>
            <remarks>
                Elle donne un identifiant qui est le dernier identifiant de table Familles à la nouvelle famille 
            </remarks>
        </member>
        <member name="M:Mercure.InterfaceBaseDonnee.InterfaceDB_Famille.ModifierFamille(System.Int32,System.String)">
            <summary>
                Cette methode permet de modifier les données d'une famille dans la table Famille
            </summary>
            <param name="reffamille"> l'identifiant de la famille à modifier </param>
            <param name="nouveaunomfamille">le nouveau nom  de la famille </param>
            <returns>le resultat de l'opération </returns>
            <remarks>
                la mise à jour est faite si la famille existe 
            </remarks>
        </member>
        <member name="M:Mercure.InterfaceBaseDonnee.InterfaceDB_Famille.SupprimerFamille(System.Int32)">
            <summary>
            Cette methode permet de supprimer une famille dans la table Familles
            </summary>
            <param name="refFamille">l'identifiant de la famille à supprimer </param>
            <returns>le resultat de l'opération </returns>
            <remarks>
                la suppresion est faite si la famille à supprimer n'est liée à aucune sous famille 
                sinon la suppression sera refusé
            </remarks>
        </member>
        <member name="M:Mercure.InterfaceBaseDonnee.InterfaceDB_Famille.GetFamille(System.String)">
            <summary>
             Cette methode permet d'avoir toutes les informations d'une famille en fonction de son nom 
            </summary>
            <param name="nom"> le nom de la famille </param>
            <returns> la famille correspondante </returns>
        </member>
        <member name="M:Mercure.InterfaceBaseDonnee.InterfaceDB_Famille.GetFamille(System.Int32)">
            <summary>
             Cette methode permet d'avoir toutes les informations d'une famille en fonction de son identifiant
            </summary>
            <param name="reffamille"> l'identifiant de la famille</param>
            <returns>la famille correspondante </returns>
        </member>
        <member name="M:Mercure.InterfaceBaseDonnee.InterfaceDB_Famille.GetToutesFamille">
            <summary>
             Cette methode nous donne la liste de toutes les familles de la table Familles 
            </summary>
            <returns>liste de famille</returns>
        </member>
        <member name="T:Mercure.InterfaceBaseDonnee.InterfaceDB_Marque">
            <summary>
             Cette classe représente l'interface de requete sur la table Marques
            </summary>
            <remarks>
                Elle utilise la classe statique <see cref="T:Mercure.InterfaceBaseDonnee.InterfaceDB"/>
            </remarks>
        </member>
        <member name="F:Mercure.InterfaceBaseDonnee.InterfaceDB_Marque.RequeteInsererMarque">
            <summary>
             Attribut contentant la requete d'insertion de la classe 
            </summary>
        </member>
        <member name="F:Mercure.InterfaceBaseDonnee.InterfaceDB_Marque.RequeteDonneesMarque">
            <summary>
             Attribut contentant la requete de selection  de la classe 
            </summary>
        </member>
        <member name="F:Mercure.InterfaceBaseDonnee.InterfaceDB_Marque.RequeteModifierMarque">
            <summary>
             Attribut contentant la requete de modification  de la classe 
            </summary>
        </member>
        <member name="F:Mercure.InterfaceBaseDonnee.InterfaceDB_Marque.Lecture_Donnee">
            <summary>
             Attribut permettant la lecture des données retournées dans une commande de la classe 
            </summary>
        </member>
        <member name="M:Mercure.InterfaceBaseDonnee.InterfaceDB_Marque.#ctor">
            <summary>
            Constructeur par defaut 
            </summary>
        </member>
        <member name="M:Mercure.InterfaceBaseDonnee.InterfaceDB_Marque.InsererMarque(System.Int32,System.String)">
            <summary>
                Cette methode permet d'inserer une nouvelle marque dans la table Marques
            </summary>
            <param name="refmarque"> l'identifiant de la marque </param>
            <param name="nom"> le nom de la marque </param>
            <returns></returns>
            <remarks>
                L'insertion ne sera faite que si la marque n'existe pas
            </remarks>
        </member>
        <member name="M:Mercure.InterfaceBaseDonnee.InterfaceDB_Marque.InsererMarque(System.String)">
            <summary>
                Cette methode permet d'inserer une nouvelle marque dans la table Marques
            </summary>
            <param name="nom"> le nom de la marque </param>
            <returns>le resultat de l'operation </returns>
            <remarks>
                L'identifiant est données par rapport au dernier identifiant de la table Marques
            </remarks>
        </member>
        <member name="M:Mercure.InterfaceBaseDonnee.InterfaceDB_Marque.ModifierMarque(System.Int32,System.String)">
            <summary>
            Cette methode permet de modifier les données d'une marque dans la table Marques
            </summary>
            <param name="refmarque">l'identifiant de la marque </param>
            <param name="nouveaunommarque">le nouveau nom de la marque </param>
            <returns>le resultat de l'operation </returns>
        </member>
        <member name="M:Mercure.InterfaceBaseDonnee.InterfaceDB_Marque.SupprimerMarque(System.Int32)">
            <summary>
             Cette methode permet de supprimer une marque dans la table Marques en fonction de son identifiant
            </summary>
            <param name="refMarque">l'identifiant de la marque à supprimer </param>
            <returns>le resultat de l'operation </returns>
            <remarks>
                 la suppresion est faite si la marque à supprimer n'est pas liée à aucun article 
                sinon la suppression sera refusé
            </remarks>
        </member>
        <member name="M:Mercure.InterfaceBaseDonnee.InterfaceDB_Marque.GetMarque(System.String)">
            <summary>
             Cette methode permet d'avoir toutes les informations d'une marque en fonction de son nom 
            </summary>
            <param name="nom"> le nom de la marque </param>
            <returns> la marque correspondante</returns>
        </member>
        <member name="M:Mercure.InterfaceBaseDonnee.InterfaceDB_Marque.GetMarque(System.Int32)">
            <summary>
             Cette methode permet d'avoir toutes les informations d'une marque en fonction de son identifiant 
            </summary>
            <param name="refmarque">l'identifiant de la marque </param>
            <returns>la marque correspondante</returns>
        </member>
        <member name="M:Mercure.InterfaceBaseDonnee.InterfaceDB_Marque.GetToutesMarque">
            <summary>
             Cette methode nous donne la liste de toutes les marques de la table Marques 
            </summary>
            <returns>liste de marque </returns>
        </member>
        <member name="T:Mercure.InterfaceBaseDonnee.InterfaceDB_Sous_Famille">
            <summary>
             Cette classe représente l'interface de requete sur la table SousFamilles
            </summary>
            <remarks>
                Elle utilise la classe statique <see cref="T:Mercure.InterfaceBaseDonnee.InterfaceDB"/>
            </remarks>
        </member>
        <member name="F:Mercure.InterfaceBaseDonnee.InterfaceDB_Sous_Famille.RequeteInsererSousFamille">
            <summary>
             Attribut contentant la requete d'insertion de la classe 
            </summary>
        </member>
        <member name="F:Mercure.InterfaceBaseDonnee.InterfaceDB_Sous_Famille.RequeteDonneesSousFamilles">
            <summary>
             Attribut contentant la requete de selection  de la classe 
            </summary>
        </member>
        <member name="F:Mercure.InterfaceBaseDonnee.InterfaceDB_Sous_Famille.RequeteModifierSousFamille">
            <summary>
             Attribut contentant la requete de modification  de la classe 
            </summary>
        </member>
        <member name="F:Mercure.InterfaceBaseDonnee.InterfaceDB_Sous_Famille.Lecture_Donnee">
            <summary>
             Attribut permettant la lecture des données retournées dans une commande de la classe 
            </summary>
        </member>
        <member name="M:Mercure.InterfaceBaseDonnee.InterfaceDB_Sous_Famille.#ctor">
            <summary>
            Constructeur par defaut 
            </summary>
        </member>
        <member name="M:Mercure.InterfaceBaseDonnee.InterfaceDB_Sous_Famille.InsererSousFamille(System.Int32,System.Int32,System.String)">
            <summary>
             Cette methode permet d'inserer une nouvelle sous famille dans la table SousFamilles 
            </summary>
            <param name="refSousFamille">l'identifiant de la sous famille </param>
            <param name="refFamille">l'identifiant de la famille</param>
            <param name="nom">le nom de la sous famille </param>
            <returns>le resultat de l'operation </returns>
            <remarks>  
                L'insertion est faite si la sous famille n'existait pas sinon rien 
            </remarks>
        </member>
        <member name="M:Mercure.InterfaceBaseDonnee.InterfaceDB_Sous_Famille.InsererSousFamille(System.String,System.String)">
            <summary>
             Cette methode permet d'inserer une nouvelle sous famille dans la table SousFamilles 
            </summary>
            <param name="nomFamille"> le nom de la famille </param>
            <param name="nom"> le nom de la sous famille </param>
            <returns>le resultat de l'operation </returns>
            <remarks>  
                - On cherche la famille correspondant au nom de la famille
                - L'insertion est faite si la sous famille n'existait pas sinon rien 
                - Et l'identifiant correspond au dernier identifiant dans de la table
            </remarks>
        </member>
        <member name="M:Mercure.InterfaceBaseDonnee.InterfaceDB_Sous_Famille.ModifierSousFamille(System.Int32,System.Int32,System.String)">
            <summary>
                Cette methode permet de modifier les données d'une sous famille dans la table SousFamilles
            </summary>
            <param name="refsousfamille"> l'identifiant de la sous famille à modifier</param>
            <param name="refnouvellefamile"> l'identifiant de la nouvelle famille </param>
            <param name="nouveaunomsousfamille"> le nouveau nom de la sous famille </param>
            <returns>le resultat de l'operation </returns>
        </member>
        <member name="M:Mercure.InterfaceBaseDonnee.InterfaceDB_Sous_Famille.SupprimerSousFamille(System.Int32)">
            <summary>
                 Cette methode permet de supprimer une sous famille dans la table SousFamilles
            </summary>
            <param name="refsousfamille">l'identifiant de la sous famille à supprimer </param>
            <returns>le resultat de l'operation </returns>
            <remarks>
                la suppresion est faite si la sous famille à supprimer n'est liée à aucun  article 
                sinon la suppression sera refusé
            </remarks>
        </member>
        <member name="M:Mercure.InterfaceBaseDonnee.InterfaceDB_Sous_Famille.GetSousFamille(System.String)">
            <summary>
             Cette methode permet d'avoir toutes les informations d'une sous famille en fonction de son nom 
            </summary>
            <param name="nom"> le nom de la sous famille </param>
            <returns>la sous famille correspondante </returns>
        </member>
        <member name="M:Mercure.InterfaceBaseDonnee.InterfaceDB_Sous_Famille.GetSousFamille(System.Int32)">
            <summary>
             Cette methode permet d'avoir toutes les informations d'une sous famille en fonction de son identifiant 
            </summary>
            <param name="sousfamilleref"> l'identifiant de la sous famille </param>
            <returns>la sous famille correspondante </returns>
        </member>
        <member name="M:Mercure.InterfaceBaseDonnee.InterfaceDB_Sous_Famille.getToutesSousFamille">
            <summary>
             Cette methode nous donne la liste de toutes les sous familles de la table SousFamilles 
            </summary>
            <returns>liste des sous familles</returns>
        </member>
        <member name="M:Mercure.InterfaceBaseDonnee.InterfaceDB_Sous_Famille.GetToutesSousFamillebyFamille(System.Int32)">
            <summary>
             Cette methode nous donne la liste de toutes les sous familles de la table SousFamilles appartenant à une famille
            </summary>
            <param name="refFamille"></param>
            <returns>liste des sous familles</returns>
        </member>
        <member name="M:Mercure.Program.Main(System.String[])">
            <summary>
            Point d'entrée principal de l'application.
            </summary>
        </member>
        <member name="T:Mercure.Properties.Resources">
            <summary>
              Une classe de ressource fortement typée destinée, entre autres, à la consultation des chaînes localisées.
            </summary>
        </member>
        <member name="P:Mercure.Properties.Resources.ResourceManager">
            <summary>
              Retourne l'instance ResourceManager mise en cache utilisée par cette classe.
            </summary>
        </member>
        <member name="P:Mercure.Properties.Resources.Culture">
            <summary>
              Remplace la propriété CurrentUICulture du thread actuel pour toutes
              les recherches de ressources à l'aide de cette classe de ressource fortement typée.
            </summary>
        </member>
    </members>
</doc>
